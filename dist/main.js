(()=>{"use strict";var e={890:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),s=t.n(a)()(o());s.push([e.id,"* {\n  margin: 0;\n}\n\nbody {\n  min-height: 100vh;\n}\n\n.title {\n  font-size: 4rem;\n  padding: 1rem 2rem;\n}\n\n.body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.boards {\n  display: flex;\n  justify-content: center;\n  gap: 10rem;\n}\n\n.board-info {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  gap: 0.5rem;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  grid-row: 1 / 2;\n}\n\n.cell {\n  height: 2rem;\n  width: 2rem;\n  border: 1px solid black;\n}\n\n.player {\n  grid-row: 2 / 3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.3rem;\n}\n\n.ship {\n  background-color: gray;\n}\n\n.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: aqua;\n}\n\n.message {\n  font-size: 1.75rem;\n}\n\n.buttons {\n  display: flex;\n  gap: 2rem;\n  justify-content: center;\n}\n\nbutton {\n  width: 8rem;\n  height: 4rem;\n  font-size: 1.5rem;\n}\n","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,0BAA0B;EAC1B,4BAA4B;EAC5B,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;AACnB",sourcesContent:["* {\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  min-height: 100vh;\r\n}\r\n\r\n.title {\r\n  font-size: 4rem;\r\n  padding: 1rem 2rem;\r\n}\r\n\r\n.body {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n}\r\n\r\n.boards {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10rem;\r\n}\r\n\r\n.board-info {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: auto 1fr;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.board {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-row: 1 / 2;\r\n}\r\n\r\n.cell {\r\n  height: 2rem;\r\n  width: 2rem;\r\n  border: 1px solid black;\r\n}\r\n\r\n.player {\r\n  grid-row: 2 / 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n.ship {\r\n  background-color: gray;\r\n}\r\n\r\n.hit {\r\n  background-color: red;\r\n}\r\n\r\n.miss {\r\n  background-color: aqua;\r\n}\r\n\r\n.message {\r\n  font-size: 1.75rem;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  gap: 2rem;\r\n  justify-content: center;\r\n}\r\n\r\nbutton {\r\n  width: 8rem;\r\n  height: 4rem;\r\n  font-size: 1.5rem;\r\n}\r\n"],sourceRoot:""}]);const i=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);r&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},s=[],i=0;i<e.length;i++){var l=e[i],c=r.base?l[0]+r.base:l[0],d=a[c]||0,A="".concat(c," ").concat(d);a[c]=d+1;var u=t(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=o(p,r);r.byIndex=i,n.splice(i,0,{identifier:A,updater:f,references:1})}s.push(A)}return s}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var i=t(a[s]);n[i].references--}for(var l=r(e,o),c=0;c<a.length;c++){var d=t(a[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=l}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=()=>{const e=(()=>{const e=[],n=[],t=[],r=(()=>{const e=[];for(let n=0;n<10;n+=1){const n=[];for(let e=0;e<10;e+=1)n[e]=null;e.push(n)}return e})();return{getCells:()=>r,placeShip:(e,n,o,a)=>{const s=(e=>{let n=0;return{length:e,hit:()=>{n+=1},getHits:()=>n,isSunk:()=>e===n}})(e);if("horizontal"===a)for(let t=o,a=0;a<e;t+=1,a+=1)r[n][t]=s;if("vertical"===a)for(let t=n,a=0;a<e;t+=1,a+=1)r[t][o]=s;t.push(s)},receiveAttack:(t,o)=>{n.push([t,o]);const a=r[t][o];a?a.hit():e.push([t,o])},getMissedAttacks:()=>e,allShipsSunk:()=>t.every((e=>e.isSunk())),getAllMoves:()=>n,getEmptyPositions:()=>{const e=[];for(let n=0;n<9;n+=1)for(let t=0;t<9;t+=1)null===r[n][t]&&e.push([n,t]);return e},getTakenPositions:()=>{const e=[];for(let n=0;n<9;n+=1)for(let t=0;t<9;t+=1)null!==r[n][t]&&e.push([n,t]);return e}}})();let n=!1;return{sendAttack:(e,n)=>{const[t,r]=n;e.receiveAttack(t,r)},getRandomMove:()=>[Math.floor(10*Math.random()),Math.floor(10*Math.random())],isTurn:()=>n,startTurn:()=>{n=!0},endTurn:()=>{n=!1},getBoard:()=>e}},n=(()=>{const t=e(),r=e(),a=t.getBoard(),s=r.getBoard();return{getPlayer:()=>t,getEnemy:()=>r,isOver:()=>a.allShipsSunk()||s.allShipsSunk(),playRound:(e,i)=>{let l=parseInt(e.dataset.row,10),c=parseInt(e.dataset.col,10);if(t.sendAttack(s,[l,c]),o.updateCellState(s,e),!s.getCells()[l][c]&&!n.isOver())do{let n;do{n=r.getRandomMove()}while(a.getAllMoves().some((e=>e[0]===n[0]&&e[1]===n[1])));r.sendAttack(a,n),[l,c]=n,e=i.querySelector(`.cell[data-row="${l}"][data-col="${c}"]`),o.updateCellState(a,e)}while(a.getCells()[l][c]&&!n.isOver())},switchTurn:()=>{t.isTurn()?(t.endTurn(),r.startTurn()):(r.endTurn(),t.startTurn())}}})(),r=n,o=(()=>{const e=document.querySelectorAll(".board"),n=document.getElementById("player-board"),t=document.getElementById("enemy-board"),o=document.getElementById("play-button"),a=document.getElementById("reset-button"),s=document.getElementById("random-button"),i=e=>{const t=e.target.closest(".cell");t&&(r.isOver()||t.classList.contains("hit")||t.classList.contains("miss")||r.playRound(t,n))};return o.addEventListener("click",(()=>{o.style.display="none",s.style.display="none",t.addEventListener("click",i)})),a.addEventListener("click",(()=>{t.removeEventListener("click",i),o.style.display="block",s.style.display="block"})),{addBoardCells:()=>{e.forEach((e=>{for(let n=0;n<10;n+=1)for(let t=0;t<10;t+=1){const r=document.createElement("div");r.classList.add("cell"),r.setAttribute("data-row",n),r.setAttribute("data-col",t),e.appendChild(r)}}))},displayShips:e=>{for(const[t,r]of e.getTakenPositions())n.querySelector(`.cell[data-row="${t}"][data-col="${r}"]`).classList.add("ship")},updateCellState:(e,n)=>{e.getTakenPositions().some((e=>e[0]===parseInt(n.dataset.row,10)&&e[1]===parseInt(n.dataset.col,10)))?n.classList.add("hit"):n.classList.add("miss")}}})();var a=t(379),s=t.n(a),i=t(795),l=t.n(i),c=t(569),d=t.n(c),A=t(565),u=t.n(A),p=t(216),f=t.n(p),m=t(589),h=t.n(m),g=t(890),y={};y.styleTagTransform=h(),y.setAttributes=u(),y.insert=d().bind(null,"head"),y.domAPI=l(),y.insertStyleElement=f(),s()(g.Z,y),g.Z&&g.Z.locals&&g.Z.locals,o.addBoardCells();const E=r.getPlayer(),C=r.getEnemy(),v=E.getBoard(),B=C.getBoard();v.placeShip(5,0,0,"horizontal"),v.placeShip(4,2,0,"horizontal"),v.placeShip(3,4,0,"horizontal"),v.placeShip(3,6,0,"horizontal"),v.placeShip(2,8,0,"horizontal"),B.placeShip(5,0,0,"horizontal"),B.placeShip(4,2,0,"horizontal"),B.placeShip(3,4,0,"horizontal"),B.placeShip(3,6,0,"horizontal"),B.placeShip(2,8,0,"horizontal"),o.displayShips(v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RVovQyxFQUNmeUIsb0JBQ0E0QixNQUNFbkMsR0FDQ0EsRUFBUyxLQUFPK0IsU0FBU0YsRUFBS0csUUFBUTdDLElBQUssS0FDM0NhLEVBQVMsS0FBTytCLFNBQVNGLEVBQUtHLFFBQVE1QyxJQUFLLE1BSWxDeUMsRUFBS2lCLFVBQVVPLElBQUksT0FDN0J4QixFQUFLaUIsVUFBVU8sSUFBSSxPQUFPLEVBd0NsQyxFQXRGVyxHLHlIQ1FSdEosRUFBVSxDQUFDLEVBRWZBLEVBQVFnRCxrQkFBb0IsSUFDNUJoRCxFQUFRMEMsY0FBZ0IsSUFFbEIxQyxFQUFRMEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MxQixFQUFRZSxPQUFTLElBQ2pCZixFQUFRK0MsbUJBQXFCLElBRWhCLElBQUksSUFBUy9DLEdBS0osS0FBVyxJQUFRd0osUUFBUyxJQUFRQSxPQ3JCMUQsRUFBSUosZ0JBR0osTUFBTTlCLEVBQVMsRUFBS0ksWUFDZEgsRUFBUSxFQUFLSSxXQUdiSCxFQUFjRixFQUFPRixXQUNyQkssRUFBYUYsRUFBTUgsV0FHekJJLEVBQVloQyxVQUFVLEVBQUcsRUFBRyxFQUFHLGNBQy9CZ0MsRUFBWWhDLFVBQVUsRUFBRyxFQUFHLEVBQUcsY0FDL0JnQyxFQUFZaEMsVUFBVSxFQUFHLEVBQUcsRUFBRyxjQUMvQmdDLEVBQVloQyxVQUFVLEVBQUcsRUFBRyxFQUFHLGNBQy9CZ0MsRUFBWWhDLFVBQVUsRUFBRyxFQUFHLEVBQUcsY0FFL0JpQyxFQUFXakMsVUFBVSxFQUFHLEVBQUcsRUFBRyxjQUM5QmlDLEVBQVdqQyxVQUFVLEVBQUcsRUFBRyxFQUFHLGNBQzlCaUMsRUFBV2pDLFVBQVUsRUFBRyxFQUFHLEVBQUcsY0FDOUJpQyxFQUFXakMsVUFBVSxFQUFHLEVBQUcsRUFBRyxjQUM5QmlDLEVBQVdqQyxVQUFVLEVBQUcsRUFBRyxFQUFHLGNBRTlCLEVBQUkrRCxhQUFhL0IsRSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGVzL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvU2hpcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL1BsYXllci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL0dhbWVib2FyZC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL0dhbWUuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9ET00uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvc3R5bGUuY3NzP2ZmOTQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgKiB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBtaW4taGVpZ2h0OiAxMDB2aDtcclxufVxyXG5cclxuLnRpdGxlIHtcclxuICBmb250LXNpemU6IDRyZW07XHJcbiAgcGFkZGluZzogMXJlbSAycmVtO1xyXG59XHJcblxyXG4uYm9keSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiAycmVtO1xyXG59XHJcblxyXG4uYm9hcmRzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGdhcDogMTByZW07XHJcbn1cclxuXHJcbi5ib2FyZC1pbmZvIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byAxZnI7XHJcbiAgZ2FwOiAwLjVyZW07XHJcbn1cclxuXHJcbi5ib2FyZCB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMWZyKTtcclxuICBncmlkLXJvdzogMSAvIDI7XHJcbn1cclxuXHJcbi5jZWxsIHtcclxuICBoZWlnaHQ6IDJyZW07XHJcbiAgd2lkdGg6IDJyZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbn1cclxuXHJcbi5wbGF5ZXIge1xyXG4gIGdyaWQtcm93OiAyIC8gMztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxLjNyZW07XHJcbn1cclxuXHJcbi5zaGlwIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG59XHJcblxyXG4uaGl0IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5taXNzIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhO1xyXG59XHJcblxyXG4ubWVzc2FnZSB7XHJcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xyXG59XHJcblxyXG4uYnV0dG9ucyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6IDJyZW07XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDhyZW07XHJcbiAgaGVpZ2h0OiA0cmVtO1xyXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xyXG59XHJcbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsU0FBUztBQUNYOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsMEJBQTBCO0VBQzFCLDRCQUE0QjtFQUM1QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0NBQXNDO0VBQ3RDLG1DQUFtQztFQUNuQyxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFNBQVM7RUFDVCx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtBQUNuQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXFxyXFxuYm9keSB7XFxyXFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXHJcXG59XFxyXFxuXFxyXFxuLnRpdGxlIHtcXHJcXG4gIGZvbnQtc2l6ZTogNHJlbTtcXHJcXG4gIHBhZGRpbmc6IDFyZW0gMnJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLmJvZHkge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgZ2FwOiAycmVtO1xcclxcbn1cXHJcXG5cXHJcXG4uYm9hcmRzIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGdhcDogMTByZW07XFxyXFxufVxcclxcblxcclxcbi5ib2FyZC1pbmZvIHtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byAxZnI7XFxyXFxuICBnYXA6IDAuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLmJvYXJkIHtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEwLCAxZnIpO1xcclxcbiAgZ3JpZC1yb3c6IDEgLyAyO1xcclxcbn1cXHJcXG5cXHJcXG4uY2VsbCB7XFxyXFxuICBoZWlnaHQ6IDJyZW07XFxyXFxuICB3aWR0aDogMnJlbTtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcclxcbn1cXHJcXG5cXHJcXG4ucGxheWVyIHtcXHJcXG4gIGdyaWQtcm93OiAyIC8gMztcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBmb250LXNpemU6IDEuM3JlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnNoaXAge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcXHJcXG59XFxyXFxuXFxyXFxuLmhpdCB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxyXFxufVxcclxcblxcclxcbi5taXNzIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XFxyXFxufVxcclxcblxcclxcbi5tZXNzYWdlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMS43NXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbnMge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGdhcDogMnJlbTtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG5idXR0b24ge1xcclxcbiAgd2lkdGg6IDhyZW07XFxyXFxuICBoZWlnaHQ6IDRyZW07XFxyXFxuICBmb250LXNpemU6IDEuNXJlbTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImNvbnN0IFNoaXAgPSAobGVuZ3RoKSA9PiB7XHJcbiAgLy8gaGl0cyBzdGFydCBhdCAwXHJcbiAgbGV0IGhpdHMgPSAwO1xyXG5cclxuICAvLyBpbmNyZW1lbnRzIG51bWJlciBvZiBoaXRzIG9uIGEgc2hpcFxyXG4gIGNvbnN0IGhpdCA9ICgpID0+IHtcclxuICAgIGhpdHMgKz0gMTtcclxuICB9O1xyXG5cclxuICAvLyByZXR1cm5zIG51bWJlciBvZiBoaXRzXHJcbiAgY29uc3QgZ2V0SGl0cyA9ICgpID0+IGhpdHM7XHJcblxyXG4gIC8vIGRldGVybWluZXMgaWYgYSBzaGlwIGhhcyBzdW5rXHJcbiAgY29uc3QgaXNTdW5rID0gKCkgPT4gbGVuZ3RoID09PSBoaXRzO1xyXG5cclxuICByZXR1cm4geyBsZW5ndGgsIGhpdCwgZ2V0SGl0cywgaXNTdW5rIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTaGlwO1xyXG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby1zaGFkb3cgKi9cclxuaW1wb3J0IEdhbWVib2FyZCBmcm9tIFwiLi9HYW1lYm9hcmRcIjtcclxuXHJcbmNvbnN0IFBsYXllciA9ICgpID0+IHtcclxuICBjb25zdCBib2FyZCA9IEdhbWVib2FyZCgpO1xyXG4gIGxldCB0dXJuID0gZmFsc2U7XHJcblxyXG4gIGNvbnN0IHNlbmRBdHRhY2sgPSAoYm9hcmQsIGNvb3JkcykgPT4ge1xyXG4gICAgY29uc3QgW3JvdywgY29sXSA9IGNvb3JkcztcclxuXHJcbiAgICBib2FyZC5yZWNlaXZlQXR0YWNrKHJvdywgY29sKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBnZXRSYW5kb21Nb3ZlID0gKCkgPT4ge1xyXG4gICAgY29uc3Qgcm93ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xyXG4gICAgY29uc3QgY29sID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xyXG5cclxuICAgIHJldHVybiBbcm93LCBjb2xdO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGlzVHVybiA9ICgpID0+IHR1cm47XHJcblxyXG4gIGNvbnN0IHN0YXJ0VHVybiA9ICgpID0+IHtcclxuICAgIHR1cm4gPSB0cnVlO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGVuZFR1cm4gPSAoKSA9PiB7XHJcbiAgICB0dXJuID0gZmFsc2U7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZ2V0Qm9hcmQgPSAoKSA9PiBib2FyZDtcclxuXHJcbiAgcmV0dXJuIHsgc2VuZEF0dGFjaywgZ2V0UmFuZG9tTW92ZSwgaXNUdXJuLCBzdGFydFR1cm4sIGVuZFR1cm4sIGdldEJvYXJkIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQbGF5ZXI7XHJcbiIsImltcG9ydCBTaGlwIGZyb20gXCIuL1NoaXBcIjtcclxuXHJcbmNvbnN0IEdhbWVib2FyZCA9ICgpID0+IHtcclxuICAvLyBtaXNzZWQgYXR0YWNrcyBhcnJheVxyXG4gIGNvbnN0IG1pc3NlZEF0dGFja3MgPSBbXTtcclxuXHJcbiAgLy8ga2VlcCB0cmFjayBvZiB3aGVyZSBtb3ZlcyB3ZXJlIG1hZGVcclxuICBjb25zdCBtb3ZlcyA9IFtdO1xyXG5cclxuICAvLyBrZWVwcyB0cmFjayBvZiBzaGlwcyBvbiB0aGUgYm9hcmRcclxuICBjb25zdCBzaGlwcyA9IFtdO1xyXG5cclxuICAvLyBDcmVhdGVzIGJvYXJkLiBTcG90cyB0aGF0IGhhdmVuJ3QgYmVlbiBjaGVja2VkIGFyZSBudWxsLlxyXG4gIGNvbnN0IGNyZWF0ZUJvYXJkID0gKCkgPT4ge1xyXG4gICAgY29uc3QgYnJkID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpICs9IDEpIHtcclxuICAgICAgY29uc3Qgcm93ID0gW107XHJcbiAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IDEwOyBjb2wgKz0gMSkge1xyXG4gICAgICAgIHJvd1tjb2xdID0gbnVsbDtcclxuICAgICAgfVxyXG4gICAgICBicmQucHVzaChyb3cpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBicmQ7XHJcbiAgfTtcclxuXHJcbiAgLy8gY3JlYXRlcyBhIG5ldyBib2FyZFxyXG4gIGNvbnN0IGJvYXJkID0gY3JlYXRlQm9hcmQoKTtcclxuXHJcbiAgLy8gZ2V0IGN1cnJlbnQgYm9hcmQgY2VsbHNcclxuICBjb25zdCBnZXRDZWxscyA9ICgpID0+IGJvYXJkO1xyXG5cclxuICAvLyBQbGFjZXMgYSBzaGlwIGF0IHNwZWNpZmllZCBjb29yZGluYXRlcyBhbmQgb24gYSBzcGVjaWZpZWQgYXhpcyAoZm9yIG5vdyB3ZSB3b24ndCB2ZXJpZnkgdGhlIHBvc2l0aW9uIGhlcmUpXHJcbiAgY29uc3QgcGxhY2VTaGlwID0gKGxlbmd0aCwgcm93LCBjb2wsIGF4aXMpID0+IHtcclxuICAgIGNvbnN0IHNoaXAgPSBTaGlwKGxlbmd0aCk7XHJcblxyXG4gICAgLy8gaWYgb24gaG9yaXpvbnRhbCBheGlzXHJcbiAgICBpZiAoYXhpcyA9PT0gXCJob3Jpem9udGFsXCIpIHtcclxuICAgICAgZm9yIChsZXQgaSA9IGNvbCwgaiA9IDA7IGogPCBsZW5ndGg7IGkgKz0gMSwgaiArPSAxKSB7XHJcbiAgICAgICAgYm9hcmRbcm93XVtpXSA9IHNoaXA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBpZiBvbiB2ZXJ0aWNhbCBheGlzXHJcbiAgICBpZiAoYXhpcyA9PT0gXCJ2ZXJ0aWNhbFwiKSB7XHJcbiAgICAgIGZvciAobGV0IGkgPSByb3csIGogPSAwOyBqIDwgbGVuZ3RoOyBpICs9IDEsIGogKz0gMSkge1xyXG4gICAgICAgIGJvYXJkW2ldW2NvbF0gPSBzaGlwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gYWRkIHNoaXAgdG8gYXJyYXlcclxuICAgIHNoaXBzLnB1c2goc2hpcCk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgcmVjZWl2ZUF0dGFjayA9IChyb3csIGNvbCkgPT4ge1xyXG4gICAgLy8gYWRkIG1vdmUgdG8gbW92ZXMgYXJyYXlcclxuICAgIG1vdmVzLnB1c2goW3JvdywgY29sXSk7XHJcblxyXG4gICAgY29uc3QgcG9zaXRpb24gPSBib2FyZFtyb3ddW2NvbF07XHJcblxyXG4gICAgLy8gaWYgYSBzaGlwIGV4aXN0cyBhdCB0aGUgcG9zaXRpb24sIGhpdCBpdFxyXG4gICAgaWYgKHBvc2l0aW9uKSB7XHJcbiAgICAgIHBvc2l0aW9uLmhpdCgpO1xyXG4gICAgfVxyXG4gICAgLy8gaWYgdGhlcmUgaXMgbm8gc2hpcCBhdCB0aGUgcG9zaXRpb24sIGFkZCB0aGUgY29vcmRpbmF0ZXMgdG8gbWlzc2VkIGF0dGFja3MgYXJyYXlcclxuICAgIGVsc2UgbWlzc2VkQXR0YWNrcy5wdXNoKFtyb3csIGNvbF0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGdldE1pc3NlZEF0dGFja3MgPSAoKSA9PiBtaXNzZWRBdHRhY2tzO1xyXG5cclxuICBjb25zdCBnZXRBbGxNb3ZlcyA9ICgpID0+IG1vdmVzO1xyXG5cclxuICBjb25zdCBhbGxTaGlwc1N1bmsgPSAoKSA9PiBzaGlwcy5ldmVyeSgoc2hpcCkgPT4gc2hpcC5pc1N1bmsoKSk7XHJcblxyXG4gIGNvbnN0IGdldFRha2VuUG9zaXRpb25zID0gKCkgPT4ge1xyXG4gICAgY29uc3QgdGFrZW5Qb3NpdGlvbnMgPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgOTsgaSArPSAxKSB7XHJcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgOTsgaiArPSAxKSB7XHJcbiAgICAgICAgaWYgKGJvYXJkW2ldW2pdICE9PSBudWxsKSB0YWtlblBvc2l0aW9ucy5wdXNoKFtpLCBqXSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0YWtlblBvc2l0aW9ucztcclxuICB9O1xyXG5cclxuICBjb25zdCBnZXRFbXB0eVBvc2l0aW9ucyA9ICgpID0+IHtcclxuICAgIGNvbnN0IGVtcHR5UG9zaXRpb25zID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDk7IGkgKz0gMSkge1xyXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDk7IGogKz0gMSkge1xyXG4gICAgICAgIGlmIChib2FyZFtpXVtqXSA9PT0gbnVsbCkgZW1wdHlQb3NpdGlvbnMucHVzaChbaSwgal0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZW1wdHlQb3NpdGlvbnM7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGdldENlbGxzLFxyXG4gICAgcGxhY2VTaGlwLFxyXG4gICAgcmVjZWl2ZUF0dGFjayxcclxuICAgIGdldE1pc3NlZEF0dGFja3MsXHJcbiAgICBhbGxTaGlwc1N1bmssXHJcbiAgICBnZXRBbGxNb3ZlcyxcclxuICAgIGdldEVtcHR5UG9zaXRpb25zLFxyXG4gICAgZ2V0VGFrZW5Qb3NpdGlvbnMsXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdhbWVib2FyZDtcclxuIiwiaW1wb3J0IFBsYXllciBmcm9tIFwiLi9QbGF5ZXJcIjtcclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxyXG5pbXBvcnQgRE9NIGZyb20gXCIuL0RPTVwiO1xyXG5cclxuY29uc3QgR2FtZSA9ICgoKSA9PiB7XHJcbiAgLy8gY3JlYXRlIHBsYXllciBvYmplY3RzXHJcbiAgY29uc3QgcGxheWVyID0gUGxheWVyKCk7XHJcbiAgY29uc3QgZW5lbXkgPSBQbGF5ZXIoKTtcclxuXHJcbiAgY29uc3QgcGxheWVyQm9hcmQgPSBwbGF5ZXIuZ2V0Qm9hcmQoKTtcclxuICBjb25zdCBlbmVteUJvYXJkID0gZW5lbXkuZ2V0Qm9hcmQoKTtcclxuXHJcbiAgY29uc3QgZ2V0UGxheWVyID0gKCkgPT4gcGxheWVyO1xyXG5cclxuICBjb25zdCBnZXRFbmVteSA9ICgpID0+IGVuZW15O1xyXG5cclxuICBjb25zdCBzd2l0Y2hUdXJuID0gKCkgPT4ge1xyXG4gICAgaWYgKHBsYXllci5pc1R1cm4oKSkge1xyXG4gICAgICBwbGF5ZXIuZW5kVHVybigpO1xyXG4gICAgICBlbmVteS5zdGFydFR1cm4oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGVuZW15LmVuZFR1cm4oKTtcclxuICAgICAgcGxheWVyLnN0YXJ0VHVybigpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNvbnN0IGlzT3ZlciA9ICgpID0+IHBsYXllckJvYXJkLmFsbFNoaXBzU3VuaygpIHx8IGVuZW15Qm9hcmQuYWxsU2hpcHNTdW5rKCk7XHJcblxyXG4gIGNvbnN0IHBsYXlSb3VuZCA9IChjZWxsLCBwbGF5ZXJCb2FyZENvbnRhaW5lcikgPT4ge1xyXG4gICAgbGV0IHJvdyA9IHBhcnNlSW50KGNlbGwuZGF0YXNldC5yb3csIDEwKTtcclxuICAgIGxldCBjb2wgPSBwYXJzZUludChjZWxsLmRhdGFzZXQuY29sLCAxMCk7XHJcblxyXG4gICAgLy8gcGxheWVyIG1ha2VzIG1vdmVcclxuICAgIHBsYXllci5zZW5kQXR0YWNrKGVuZW15Qm9hcmQsIFtyb3csIGNvbF0pO1xyXG5cclxuICAgIERPTS51cGRhdGVDZWxsU3RhdGUoZW5lbXlCb2FyZCwgY2VsbCk7XHJcblxyXG4gICAgLy8gaWYgdGhlIGF0dGFjayBtaXNzZWQgYW5kIHRoZSBnYW1lIGlzIG5vdCBvdmVyLCBzd2l0Y2ggdHVybnNcclxuICAgIGlmICghZW5lbXlCb2FyZC5nZXRDZWxscygpW3Jvd11bY29sXSAmJiAhR2FtZS5pc092ZXIoKSkge1xyXG4gICAgICAvLyBlbmVteSB0YWtlcyBzaG90cyB1bnRpbCB0aGV5IG1pc3Mgb3IgdGhlIGdhbWUgZW5kc1xyXG4gICAgICBkbyB7XHJcbiAgICAgICAgLy8gd2hpbGUgdGhlcmUgaXMgbm90IGEgbmV3IG1vdmUgZ2VuZXJhdGVkLCBnZW5lcmF0ZSBhIG5ldyBtb3ZlXHJcbiAgICAgICAgbGV0IHJhbmRvbVBvc2l0aW9uO1xyXG4gICAgICAgIGRvIHtcclxuICAgICAgICAgIC8vIGdldCByYW5kb20gcG9zaXRpb24gZm9yIGVuZW15IG1vdmVcclxuICAgICAgICAgIHJhbmRvbVBvc2l0aW9uID0gZW5lbXkuZ2V0UmFuZG9tTW92ZSgpO1xyXG4gICAgICAgIH0gd2hpbGUgKFxyXG4gICAgICAgICAgcGxheWVyQm9hcmQuZ2V0QWxsTW92ZXMoKS5zb21lKFxyXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9vcC1mdW5jXHJcbiAgICAgICAgICAgIChwb3NpdGlvbikgPT5cclxuICAgICAgICAgICAgICBwb3NpdGlvblswXSA9PT0gcmFuZG9tUG9zaXRpb25bMF0gJiZcclxuICAgICAgICAgICAgICBwb3NpdGlvblsxXSA9PT0gcmFuZG9tUG9zaXRpb25bMV1cclxuICAgICAgICAgIClcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICBlbmVteS5zZW5kQXR0YWNrKHBsYXllckJvYXJkLCByYW5kb21Qb3NpdGlvbik7XHJcblxyXG4gICAgICAgIFtyb3csIGNvbF0gPSByYW5kb21Qb3NpdGlvbjtcclxuXHJcbiAgICAgICAgLy8gdXBkYXRlIHBsYXllciBib2FyZCBhZnRlciBlbmVteSdzIHR1cm5cclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cclxuICAgICAgICBjZWxsID0gcGxheWVyQm9hcmRDb250YWluZXIucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgIGAuY2VsbFtkYXRhLXJvdz1cIiR7cm93fVwiXVtkYXRhLWNvbD1cIiR7Y29sfVwiXWBcclxuICAgICAgICApO1xyXG4gICAgICAgIERPTS51cGRhdGVDZWxsU3RhdGUocGxheWVyQm9hcmQsIGNlbGwpO1xyXG4gICAgICB9IHdoaWxlIChwbGF5ZXJCb2FyZC5nZXRDZWxscygpW3Jvd11bY29sXSAmJiAhR2FtZS5pc092ZXIoKSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHsgZ2V0UGxheWVyLCBnZXRFbmVteSwgaXNPdmVyLCBwbGF5Um91bmQsIHN3aXRjaFR1cm4gfTtcclxufSkoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdhbWU7XHJcblxyXG4vLyBmYWN0b3J5IGZ1bmN0aW9uIHRoYXQgaGFzIHN0YXRlIGFuZCBmdW5jdGlvbnMuXHJcbi8vIERPTSBuZWVkcyB0byBjYWxsIGZyb20geW91ciBnYW1lIG9iamVjdCB0byBzdGFydCB0aGUgZ2FtZSwgd2hhdCBnYW1lIG9iamVjdCB3b3VsZCBkbyB3aGVuIGEgY2VsbCBpcyBjbGlja2VkIGluIHRoZSBVSS5cclxuLy8gbWFrZSBhY3Rpb24gYW5kIHJldHJpZXZlIHN0YXRlc1xyXG4vLyBVcGRhdGUgYm9hcmQgc3RhdGVzXHJcbiIsIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcclxuaW1wb3J0IEdhbWUgZnJvbSBcIi4vR2FtZVwiO1xyXG5cclxuY29uc3QgRE9NID0gKCgpID0+IHtcclxuICBjb25zdCBib2FyZENvbnRhaW5lcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmJvYXJkXCIpO1xyXG4gIGNvbnN0IHBsYXllckJvYXJkQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXItYm9hcmRcIik7XHJcbiAgY29uc3QgZW5lbXlCb2FyZENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZW5lbXktYm9hcmRcIik7XHJcbiAgY29uc3QgcGxheUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheS1idXR0b25cIik7XHJcbiAgY29uc3QgcmVzZXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlc2V0LWJ1dHRvblwiKTtcclxuICBjb25zdCByYW5kb21CdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJhbmRvbS1idXR0b25cIik7XHJcblxyXG4gIGNvbnN0IGFkZEJvYXJkQ2VsbHMgPSAoKSA9PiB7XHJcbiAgICBib2FyZENvbnRhaW5lcnMuZm9yRWFjaCgoYm9hcmQpID0+IHtcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSArPSAxKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaiArPSAxKSB7XHJcbiAgICAgICAgICBjb25zdCBjZWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICAgIGNlbGwuY2xhc3NMaXN0LmFkZChcImNlbGxcIik7XHJcbiAgICAgICAgICBjZWxsLnNldEF0dHJpYnV0ZShcImRhdGEtcm93XCIsIGkpO1xyXG4gICAgICAgICAgY2VsbC5zZXRBdHRyaWJ1dGUoXCJkYXRhLWNvbFwiLCBqKTtcclxuICAgICAgICAgIGJvYXJkLmFwcGVuZENoaWxkKGNlbGwpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgLy8gZnVuY3Rpb24gdXNlZCB0byBkaXNwbGF5IHBsYXllciBzaGlwc1xyXG4gIGNvbnN0IGRpc3BsYXlTaGlwcyA9IChib2FyZCkgPT4ge1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XHJcbiAgICBmb3IgKGNvbnN0IFtyb3csIGNvbF0gb2YgYm9hcmQuZ2V0VGFrZW5Qb3NpdGlvbnMoKSkge1xyXG4gICAgICBjb25zdCB0YXJnZXRDZWxsID0gcGxheWVyQm9hcmRDb250YWluZXIucXVlcnlTZWxlY3RvcihcclxuICAgICAgICBgLmNlbGxbZGF0YS1yb3c9XCIke3Jvd31cIl1bZGF0YS1jb2w9XCIke2NvbH1cIl1gXHJcbiAgICAgICk7XHJcblxyXG4gICAgICB0YXJnZXRDZWxsLmNsYXNzTGlzdC5hZGQoXCJzaGlwXCIpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNvbnN0IHVwZGF0ZUNlbGxTdGF0ZSA9IChib2FyZCwgY2VsbCkgPT4ge1xyXG4gICAgLy8gaWYgdGhlIGNlbGwgaXMgdGFrZW4gY3JlYXRlIGEgdmFyaWFibGUgZm9yIGl0XHJcbiAgICBjb25zdCB0YWtlbkNlbGwgPSBib2FyZFxyXG4gICAgICAuZ2V0VGFrZW5Qb3NpdGlvbnMoKVxyXG4gICAgICAuc29tZShcclxuICAgICAgICAocG9zaXRpb24pID0+XHJcbiAgICAgICAgICBwb3NpdGlvblswXSA9PT0gcGFyc2VJbnQoY2VsbC5kYXRhc2V0LnJvdywgMTApICYmXHJcbiAgICAgICAgICBwb3NpdGlvblsxXSA9PT0gcGFyc2VJbnQoY2VsbC5kYXRhc2V0LmNvbCwgMTApXHJcbiAgICAgICk7XHJcblxyXG4gICAgLy8gYWRkIGFwcHJvcHJpYXRlIGNsYXNzIHRvIGNlbGxcclxuICAgIGlmICh0YWtlbkNlbGwpIGNlbGwuY2xhc3NMaXN0LmFkZChcImhpdFwiKTtcclxuICAgIGVsc2UgY2VsbC5jbGFzc0xpc3QuYWRkKFwibWlzc1wiKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBoYW5kbGVCb2FyZENsaWNrID0gKGUpID0+IHtcclxuICAgIGNvbnN0IGNlbGwgPSBlLnRhcmdldC5jbG9zZXN0KFwiLmNlbGxcIik7XHJcblxyXG4gICAgLy8gaWYgbm8gY2VsbCB3YXMgY2xpY2tlZCBkbyBub3RoaW5nXHJcbiAgICBpZiAoIWNlbGwpIHJldHVybjtcclxuXHJcbiAgICAvLyBkb24ndCBleGVjdXRlIGV2ZW50IGlmIGdhbWUgaXMgb3ZlciBPUiB0aGUgYm94IGhhcyBhbHJlYWR5IGJlZW4gY2xpY2tlZFxyXG4gICAgaWYgKFxyXG4gICAgICBHYW1lLmlzT3ZlcigpIHx8XHJcbiAgICAgIGNlbGwuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaGl0XCIpIHx8XHJcbiAgICAgIGNlbGwuY2xhc3NMaXN0LmNvbnRhaW5zKFwibWlzc1wiKVxyXG4gICAgKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgLy8gY2FsbCBwbGF5Um91bmQgYW5kIHBhc3MgRE9NIGl0ZW1zIGFzIGFyZ3VtZW50c1xyXG4gICAgR2FtZS5wbGF5Um91bmQoY2VsbCwgcGxheWVyQm9hcmRDb250YWluZXIpO1xyXG4gIH07XHJcblxyXG4gIHBsYXlCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIC8vIGhpZGUgdW5uZWVkZWQgYnV0dG9uc1xyXG4gICAgcGxheUJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICByYW5kb21CdXR0b24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgLy8gYWRkIGJvYXJkIGV2ZW50IGxpc3RlbmVyXHJcbiAgICBlbmVteUJvYXJkQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVCb2FyZENsaWNrKTtcclxuICB9KTtcclxuXHJcbiAgcmVzZXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIC8vIHJlc2V0IGdhbWUgdmFyaWFibGVzIGhlcmVcclxuXHJcbiAgICAvLyByZW1vdmUgZXZlbnQgbGlzdGVuZXIgZm9yIGJvYXJkXHJcbiAgICBlbmVteUJvYXJkQ29udGFpbmVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVCb2FyZENsaWNrKTtcclxuICAgIC8vIHNob3cgcmVxdWlyZWQgYnV0dG9ucyBhZ2FpblxyXG4gICAgcGxheUJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgcmFuZG9tQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiB7IGFkZEJvYXJkQ2VsbHMsIGRpc3BsYXlTaGlwcywgdXBkYXRlQ2VsbFN0YXRlIH07XHJcbn0pKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBET007XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBET00gZnJvbSBcIi4vRE9NXCI7XHJcbmltcG9ydCBHYW1lIGZyb20gXCIuL0dhbWVcIjtcclxuaW1wb3J0IFwiLi9zdHlsZXMvc3R5bGUuY3NzXCI7XHJcblxyXG4vLyBjcmVhdGUgZ2FtZWJvYXJkIGNlbGxzXHJcbkRPTS5hZGRCb2FyZENlbGxzKCk7XHJcblxyXG4vLyBhY2Nlc3MgcGxheWVyIG9iamVjdHNcclxuY29uc3QgcGxheWVyID0gR2FtZS5nZXRQbGF5ZXIoKTtcclxuY29uc3QgZW5lbXkgPSBHYW1lLmdldEVuZW15KCk7XHJcblxyXG4vLyBhY2Nlc3MgcGxheWVyIGJvYXJkcyBhbmQgc2V0IHRvIHRoZWlyIG93biB2YXJpYWJsZXNcclxuY29uc3QgcGxheWVyQm9hcmQgPSBwbGF5ZXIuZ2V0Qm9hcmQoKTtcclxuY29uc3QgZW5lbXlCb2FyZCA9IGVuZW15LmdldEJvYXJkKCk7XHJcblxyXG4vLyBhZGQgc2hpcHMgdG8gZWFjaCBib2FyZCAoZm9yIG5vdyB1c2luZyBwcmVkZWZpbmVkIGxvY2F0aW9ucyB0byBtYWtlIHN1cmUgZXZlcnl0aGluZyB3b3JrcylcclxucGxheWVyQm9hcmQucGxhY2VTaGlwKDUsIDAsIDAsIFwiaG9yaXpvbnRhbFwiKTtcclxucGxheWVyQm9hcmQucGxhY2VTaGlwKDQsIDIsIDAsIFwiaG9yaXpvbnRhbFwiKTtcclxucGxheWVyQm9hcmQucGxhY2VTaGlwKDMsIDQsIDAsIFwiaG9yaXpvbnRhbFwiKTtcclxucGxheWVyQm9hcmQucGxhY2VTaGlwKDMsIDYsIDAsIFwiaG9yaXpvbnRhbFwiKTtcclxucGxheWVyQm9hcmQucGxhY2VTaGlwKDIsIDgsIDAsIFwiaG9yaXpvbnRhbFwiKTtcclxuXHJcbmVuZW15Qm9hcmQucGxhY2VTaGlwKDUsIDAsIDAsIFwiaG9yaXpvbnRhbFwiKTtcclxuZW5lbXlCb2FyZC5wbGFjZVNoaXAoNCwgMiwgMCwgXCJob3Jpem9udGFsXCIpO1xyXG5lbmVteUJvYXJkLnBsYWNlU2hpcCgzLCA0LCAwLCBcImhvcml6b250YWxcIik7XHJcbmVuZW15Qm9hcmQucGxhY2VTaGlwKDMsIDYsIDAsIFwiaG9yaXpvbnRhbFwiKTtcclxuZW5lbXlCb2FyZC5wbGFjZVNoaXAoMiwgOCwgMCwgXCJob3Jpem9udGFsXCIpO1xyXG5cclxuRE9NLmRpc3BsYXlTaGlwcyhwbGF5ZXJCb2FyZCk7XHJcblxyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwiYm9hcmQiLCJtaXNzZWRBdHRhY2tzIiwibW92ZXMiLCJzaGlwcyIsImJyZCIsInJvdyIsImNvbCIsImNyZWF0ZUJvYXJkIiwiZ2V0Q2VsbHMiLCJwbGFjZVNoaXAiLCJheGlzIiwic2hpcCIsImhpdHMiLCJoaXQiLCJnZXRIaXRzIiwiaXNTdW5rIiwiaiIsInJlY2VpdmVBdHRhY2siLCJwb3NpdGlvbiIsImdldE1pc3NlZEF0dGFja3MiLCJhbGxTaGlwc1N1bmsiLCJldmVyeSIsImdldEFsbE1vdmVzIiwiZ2V0RW1wdHlQb3NpdGlvbnMiLCJlbXB0eVBvc2l0aW9ucyIsImdldFRha2VuUG9zaXRpb25zIiwidGFrZW5Qb3NpdGlvbnMiLCJ0dXJuIiwic2VuZEF0dGFjayIsImNvb3JkcyIsImdldFJhbmRvbU1vdmUiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJpc1R1cm4iLCJzdGFydFR1cm4iLCJlbmRUdXJuIiwiZ2V0Qm9hcmQiLCJHYW1lIiwicGxheWVyIiwiZW5lbXkiLCJwbGF5ZXJCb2FyZCIsImVuZW15Qm9hcmQiLCJnZXRQbGF5ZXIiLCJnZXRFbmVteSIsImlzT3ZlciIsInBsYXlSb3VuZCIsImNlbGwiLCJwbGF5ZXJCb2FyZENvbnRhaW5lciIsInBhcnNlSW50IiwiZGF0YXNldCIsInVwZGF0ZUNlbGxTdGF0ZSIsInJhbmRvbVBvc2l0aW9uIiwic29tZSIsInN3aXRjaFR1cm4iLCJib2FyZENvbnRhaW5lcnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZ2V0RWxlbWVudEJ5SWQiLCJlbmVteUJvYXJkQ29udGFpbmVyIiwicGxheUJ1dHRvbiIsInJlc2V0QnV0dG9uIiwicmFuZG9tQnV0dG9uIiwiaGFuZGxlQm9hcmRDbGljayIsImNsb3Nlc3QiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImFkZEV2ZW50TGlzdGVuZXIiLCJkaXNwbGF5IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEJvYXJkQ2VsbHMiLCJmb3JFYWNoIiwiYWRkIiwiZGlzcGxheVNoaXBzIiwibG9jYWxzIl0sInNvdXJjZVJvb3QiOiIifQ==